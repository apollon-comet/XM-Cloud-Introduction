@model Mvp.Feature.Selections.Models.Apply.ApplicationFormModel

<div class="mvp-fs-applyapplicationform col-12">
    <h2 asp-for="ConfirmationTitleLabel"></h2>
    <form>
        <input asp-for="IsNavigation" type="hidden" value="false" />
        <input asp-for="CurrentStep" type="hidden" value="Confirmation" />
        <div class="form-check">
            @Html.EditorFor(m => m.UnderstandsReviewConsent, new { @class = "form-check-input" })
            <label asp-for="UnderstandsReviewConsent" class="form-check-label">
                @(Model.IsEditing ? Html.Raw(Model.ReviewConsentLabel.EditableMarkup) : Model.ReviewConsentLabel.Value)
            </label>
        </div>
        <div class="form-check">
            @Html.EditorFor(m => m.UnderstandsProgramAgreement, new { @class = "form-check-input" })
            <label asp-for="UnderstandsProgramAgreement" class="form-check-label">
                @(Model.IsEditing ? Html.Raw(Model.ProgramAgreementWarningLabel.EditableMarkup) : Model.ProgramAgreementWarningLabel.Value)
            </label>
        </div>
        <div class="form-check">
            @Html.EditorFor(m => m.IsComplete, new { @class = "form-check-input" })
            <label asp-for="IsComplete" class="form-check-label">
                @(Model.IsEditing ? Html.Raw(Model.CompleteLabel.EditableMarkup) : Model.CompleteLabel.Value)
            </label>
        </div>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <button asp-for="SubmitLabel" type="submit" class="btn btn-primary"></button>
    </form>
    <form>
        <input asp-for="IsNavigation" type="hidden" value="true" />
        <input asp-for="CurrentStep" type="hidden" value="Contributions" />
        <button asp-for="PreviousLabel" type="submit" class="btn btn-secondary"></button>
    </form>
</div>
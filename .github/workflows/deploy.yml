name: Build and Release
on: 
  push:
    branches: [ main ]
    paths-ignore:
    - 'README.md'
    - 'deploy**.yml' #IGNORE CHANGES TO GITHUB ACTIONS
    - 'src/Project/Sugcon/SugconAnzSxa/**' #IGNORE CHANGES TO Next.js head
  pull_request:
    branches: [ main ]
    paths-ignore:
    - 'README.md'
    - 'deploy**.yml' #IGNORE CHANGES TO GITHUB ACTIONS
    - 'src/Project/Sugcon/SugconAnzSxa/**' #IGNORE CHANGES TO Next.js head

jobs:

  build-dotnet:
    name: Build the .NET Solution
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.1
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.6
    - name: Restore NuGet packages
      run: nuget restore src\XmCloudIntroduction.sln
    - name: Build
      run: msbuild src\XmCloudIntroduction.sln /p:Configuration=Release

  # build-sugcon-eu:
  #   name: Build the SUGCON EU head
  #   runs-on: ubuntu-latest
  #   env:
  #     FETCH_WITH: GraphQL
  #     GRAPH_QL_ENDPOINT: ${{ secrets.JS_BUILD_ENDPOINT }}
  #     SITECORE_API_KEY: ${{ secrets.JS_BUILD_SECRET }}
  #   defaults:
  #     run:
  #       working-directory: ./src/Project/Sugcon/SugconEuSxa
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-node@v3
  #     with:
  #       node-version: 16.5
  #   - run: npm install
  #   - run: npm run build
  
  # build-sugcon-anz:
  #   name: Build the SUGCON ANZ head
  #   runs-on: ubuntu-latest
  #   env:
  #     FETCH_WITH: GraphQL
  #     GRAPH_QL_ENDPOINT: ${{ secrets.JS_BUILD_ENDPOINT }}
  #     SITECORE_API_KEY: ${{ secrets.JS_BUILD_SECRET }}
  #   defaults:
  #     run:
  #       working-directory: ./src/Project/Sugcon/SugconAnzSxa
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-node@v3
  #     with:
  #       node-version: 16.5
  #   - run: npm install
  #   - run: npm run build

  deploy-cm:
    name: Deploy the CM asset to XM Cloud
    if: github.ref == 'refs/heads/main'
    needs: [build-dotnet]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x' 
    - run: dotnet tool restore
    - run: dotnet sitecore --help
    - name: Authenticate CLI with XM Cloud
      run: dotnet sitecore cloud login --client-credentials --client-id ${{ secrets.PROD_CLIENT_ID }} --client-secret ${{ secrets.PROD_CLIENT_SECRET }}
    # Temp fix to remove duplicate sln file
    - name: "TEMP: Delete duplicate sln file as not currently supported"
      run: |
          cd src
          rm -f XmCloudIntroduction.sln
    - name: Deploy the CM assets to XM Cloud
      run: dotnet sitecore cloud deployment create --environment-id ${{ secrets.PROD_ENVIRONMENT_ID }} --upload 
    - name: Authenticate default environment with CLI
      run: dotnet sitecore login --ref xmcloud --client-credentials true --client-id ${{ secrets.PROD_CLIENT_ID }} --client-secret ${{ secrets.PROD_CLIENT_SECRET }} --cm ${{ secrets.PROD_CM_URL }} --allow-write true
    - name: Publish content changes
      run: dotnet sitecore publish --pt Edge

  deploy-mvp:
    name: Deploy the MVP rendering host to Azure WebApp
    if: github.ref == 'refs/heads/main'
    needs: deploy-cm  
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.300
      - name: dotnet build and publish
        run: |
          cd src/Project/MvpSite/rendering
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o '../../../../publish/mvp-staging' 
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: Mvp-Staging
          publish-profile: ${{ secrets.STAGING_WEBAPP_PUBLISH_PROFILE }}
          package: './publish/mvp-staging'

  # deploy-sugcon-eu:
  #   name: Deploy the SUGCON EU rendering host to Vercel
  #   if: github.ref == 'refs/heads/main'
  #   needs: deploy-cm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: amondnet/vercel-action@v20
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-args: ${{ fromJSON('["--prod", ""]')[github.ref != 'refs/heads/main'] }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} 
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} 
  #         scope: ${{ secrets.VERCEL_ORG_ID}}
  #         working-directory: ./
